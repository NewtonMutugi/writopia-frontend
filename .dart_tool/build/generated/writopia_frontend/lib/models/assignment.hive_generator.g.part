// **************************************************************************
// TypeAdapterGenerator
// **************************************************************************

class AssignmentAdapter extends TypeAdapter<Assignment> {
  @override
  final int typeId = 1;

  @override
  Assignment read(BinaryReader reader) {
    final numOfFields = reader.readByte();
    final fields = <int, dynamic>{
      for (int i = 0; i < numOfFields; i++) reader.readByte(): reader.read(),
    };
    return Assignment()
      ..id = fields[0] as int?
      ..title = fields[1] as String?
      ..description = fields[2] as String?
      ..dueDate = fields[3] as DateTime?
      ..numberOfPages = fields[4] as int?
      ..file = fields[5] as String?
      ..cost = fields[6] as double?
      ..completed = fields[7] as bool?
      ..userId = fields[8] as int?
      ..categoryId = fields[9] as int?;
  }

  @override
  void write(BinaryWriter writer, Assignment obj) {
    writer
      ..writeByte(10)
      ..writeByte(0)
      ..write(obj.id)
      ..writeByte(1)
      ..write(obj.title)
      ..writeByte(2)
      ..write(obj.description)
      ..writeByte(3)
      ..write(obj.dueDate)
      ..writeByte(4)
      ..write(obj.numberOfPages)
      ..writeByte(5)
      ..write(obj.file)
      ..writeByte(6)
      ..write(obj.cost)
      ..writeByte(7)
      ..write(obj.completed)
      ..writeByte(8)
      ..write(obj.userId)
      ..writeByte(9)
      ..write(obj.categoryId);
  }

  @override
  int get hashCode => typeId.hashCode;

  @override
  bool operator ==(Object other) =>
      identical(this, other) ||
      other is AssignmentAdapter &&
          runtimeType == other.runtimeType &&
          typeId == other.typeId;
}
